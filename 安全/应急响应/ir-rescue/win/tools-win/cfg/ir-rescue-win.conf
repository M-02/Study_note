# ir-rescue-win configuration file
# accepted values: 'true' or 'false' (exclusive), unless otherwise stated


# general

# remove the tools folder upon completion
killself=false
# use secure delete in preference to Windows delete commands
# Sysinternals "sdelete[64].exe"
sdelete=false
# set the output path (without a trailing backslash) such as "C:", "C:\folder" or "..\.."
# default: "." (current directory)
outpath=.
# remove the global log file
# path: "%SystemRoot%\Temp\ir-rescue-win.log"
rm-glog=false
# take screenshots of all monitors at the start, before cleanup and at the end
# NirSoft "nircmdc[64].exe"
screenshot=true
# randomize ASCII art selection to be printed upon completion
# ".\tools-win\ascii\*.txt"
# default: ".\tools-win\ascii\cyb.txt"
ascii=false


# compression, encryption and hashing

# compress all data collected into a *.7z archive
# 7-Zip "7za.exe"
zip=true
# set a password for the resulting *.7z archive
# leave empty to turn off encryption
zpassword=infected
# hash the resulting data folder before compressing
# "md5deep[64].exe"
hash=true


# vss

# make hard links to VSS copies and retrieve historical data
# collect or parse files from all available VSS copies that apply
# "vssadmin.exe"
vss=true
# limit the data collection to the newest defined VSS copies
# accepted values: a non-negative integer 'n', "n >= 0"
# default: '3', no limit: '0'
vss-limit=3

# drives
# limit applicable data collection to the defined drive letters
# accepted values: comma-separated list of drive letters (case insensitive) such as 'C,D,F'
# default: 'C,D', all drives: 'all'
drives-limit=all


# modules

# collect user activity data
activity=true
# collect disk data
disk=true
# collect Windows event logs
events=true
# collect filesystem data
filesystem=true
# collect malware data
malware=true
# collect memory data
memory=true
# collect network data
network=true
# collect registry data
registry=true
# collect system data
system=true
# collect web data
web=true


# activity
activity-all=true
activity-vss=true
# list last activity items
# NirSoft "LastActivityView.exe"
activity-mini-timeline=true
# collect USB device history
# NirSoft "USBDeview[64].exe"
activity-usb=true
# parse automatic and custom destinations jump lists; VSS applies
# "%SystemDrive%\Users\<user>\AppData\Roaming\Microsoft\Windows\Recent", "%APPDATA%\Microsoft\Windows\Recent"
# "JLECmd.exe"
activity-jump=true
# parse Link (LNK) files; VSS applies
# "%SystemDrive%\Users\<user>\AppData\Roaming\Microsoft\Windows\(Recent|Start Menu\Programs\Startup)"
# "exiftool.exe"
activity-lnk=true
# parse "$Recycle.Bin" "$I" files on all drives; Win7+; VSS applies
# "rifiuti-vista[64].exe"
activity-bin=true

# disk
disk-all=true
# collect disk and partition information
# "mmls.exe" hangs if full disk encryption (MBR or GPT is encrypted) is in place
# "\\.\PhysicalDrive0", "\\.\PhysicalDrive1", ...
# TSK "mmls.exe"; "diskpart.exe"
disk-info=true
# test for disk encryption
# Magnet Forensics "EDD.exe"
disk-encryption=true
# dump the boot sector of disks
# does not work if full disk encryption is in place
# "\\.\PhysicalDrive0", "\\.\PhysicalDrive1", ...
# TSK "mmcat.exe"
disk-boot=true

# events
events-all=true
# collect Windows event logs in *.evtx format
# Sysinternals "psloglist.exe"
events-evtx=true
# collect Windows event logs in text format
# Sysinternals "psloglist.exe"
events-txt=true

# filesystem
filesystem-all=true
filesystem-vss=true
# collect NTFS information
# "fsutil.exe", "ntfsinfo[64].exe"
filesystem-ntfs=true
# collect VSS information
# "vssadmin.exe"
filesystem-vss-info=true
# get full file and directory listing sorted by last modified time (M); VSS applies
# "dir.exe"
filesystem-dir-full=true
# get plain file and directory listing sorted alphabetically; VSS applies
# "dir.exe /B"
filesystem-dir-plain=true
# walk the MFT
# TSK "fls.exe"
filesystem-fls=true
# compute MD5 values with file size and GMT timestamps (metadata change, C) sorted alphabetically; VSS applies
# ".\tools-win\cfg\[non]recursive-md5deep.txt"
# "md5deep[64].exe"
filesystem-md5=true
# list NTFS ADSs from all drives available
# NirSoft "AlternateDataStream[64].exe"
filesystem-ads=true
# collect the NTFS MFT file from all drives available
# "%SystemDrive%\$MFT"
# "RawCopy[64].exe"
filesystem-mft=true
# collect the NTFS log file from all drives available
# records changes to the metadata; rotated every 24-36 hours
# "%SystemDrive%\$LogFile"
# "RawCopy[64].exe"
filesystem-log=true
# collect the NTFS USN journal file from all drives available
# tracks file operations; "$UsnJrnl:$J" ADS goes back a week or two
# "%SystemDrive%\$UsnJrnl"
# "ExtractUsnJrnl[64].exe"
filesystem-usnjrnl=true

# malware
malware-all=true
malware-vss=true
# collect and parse prefetch files; VSS applies
# "%SystemRoot%\Prefetch\*.pf"
# NirSoft "WinPrefetchView[64].exe"; "xcopy.exe"
malware-prefetch=true
# list running processes in plain and tree forms and with loaded DLLs
# Sysinternals "pslist[64].exe", "handle[64].exe"; "tasklist.exe"
malware-processes=true
# list loaded drivers in CSV and text formats
# NirSoft "DriverView[64].exe"; "driverquery.exe"
malware-drivers=true
# list loaded, unsigned DLLs and known DLLs, as well as process arguments
# known DLLs listed in "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs"
# Sysinternals "Listdlls[64].exe"; "reg.exe"
malware-dlls=true
# list services
# listed in "HKLM\SYSTEM\CurrentControlSet\Services\"
# Sysinternals "PsService[64].exe"; "tasklist.exe", "sc.exe", "reg.exe"
malware-services=true
# list scheduled tasks and collect tasks files; VSS applies
# "%SystemRoot%\Tasks", "%SystemRoot%\(System32|SysWOW64)\Tasks"
# "schtasks.exe", "xcopy.exe"
malware-tasks=true
# list system-wide and current user autorun entries in CSV and "autoruns" (*.arn) formats
# "NTUSER.dat" hives must be parsed after data collection in order to retrieve run keys from user profiles other than the current
# Sysinternals "autoruns.exe", "autorunsc.exe"
malware-autoruns=true
# list browser plugins, add-ons and toolbars
# listed in:
## "HKLM\SOFTWARE\[Wow6432Node\]Microsoft\Internet Explorer\Extensions"
## "HKLM\SOFTWARE\[Wow6432Node\]Google\Chrome\Extensions"
## "HKLM\SOFTWARE\[Wow6432Node\]Mozilla"
## "HKLM\SOFTWARE\[Wow6432Node\]MozillaPlugins"
# NirSoft "BrowserAddonsView[64].exe"; "reg.exe"
malware-addons=true
# list Microsoft Office Add-ins
# NirSoft "OfficeIns[64].exe"
malware-office=true
# get file and directory listing of hidden files and folders; VSS applies
# ".\tools-win\cfg\[non]recursive.txt"
# "dir.exe", "attrib.exe"
malware-hidden=true
# collect user and system startup items; VSS applies
# "%SystemDrive%\Users\<user>\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup"
# "%ProgramData%\Microsoft\Windows\Start Menu\Programs\Startup"
# "xcopy.exe"
malware-startup=true
# collect program execution cache files (Application Experience and Compatibility caches); VSS applies
# cleared daily at 12:30am by the 'ProgramDataUpdater' task
# "%SystemRoot%\AppCompat\Programs\(RecentFileCache.bcf|Amcache.hve)"
# "RawCopy[64].exe"; "xcopy.exe"
malware-cache=true

# memory
memory-all=true
memory-vss=true
# dump the RAM to raw format
# Pmem "winpmem_1.6.2.exe"
memory-dump=true
# collect RAM paged onto the disk; VSS applies
# listed in "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management"
# "%SystemDrive%\pagefile.sys"
# "RawCopy[64].exe"
memory-pagefile=true
# collect RAM written to disk during hibernation; VSS applies
# "%SystemDrive%\hiberfil.sys"
# "RawCopy[64].exe"
memory-hiberfil=true
# collect Windows crash dumps; VSS applies
# listed in "HKLM\SYSTEM\CurrentControlSet\Control\CrashControl"
# "%SystemRoot%\Minidump"
# "xcopy.exe"
memory-minidump=true
# collect application crash dumps from all users which can be analyzed with the Windows debugger (WinDbg); VSS applies
# listed in "HKLM\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps"
# "%SystemDrive%\Users\<user>\AppData\Local\CrashDumps", "%LOCALAPPDATA%\CrashDumps"
memory-appdumps=true

# network
network-all=true
# set target to ping and to trace the network path to
# default: 'www.google.com'
# "ping.exe", "tracert.exe"
network-target=www.google.com
# Sysinternals "tcpvcon.exe", "psfile[64].exe"

# registry
registry-all=true
registry-vss=true
# collect system registry hives; VSS applies
# "%SystemRoot%\System32\config\(SAM|SECURITY|SOFTWARE|SYSTEM)"
# "RawCopy[64].exe"
registry-system=true
# collect user registry hives; VSS applies
# listed in "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList"
# "%SystemDrive%\Users\<user>\NTUSER.dat", "%USERPROFILE%\NTUSER.dat"
# "%SystemDrive%\Users\<user>\AppData\Local\Microsoft\Windows\UsrClass.dat", "%LOCALAPPDATA%\Microsoft\Windows\UsrClass.dat"
# "RawCopy[64].exe"
registry-user=true
# export all registry hives in text format
# "HKCR", "HKLM", "HKU"
# "reg.exe"
registry-text=true

# system
system-all=true
system-vss=true
# collect system (software and hardware) information
# Sysinternals "Psinfo[64].exe"
system-info=true
# collect Windows user account and login data
# Sysinternals "psloggedon[64].exe", "logonsessions[64].exe"
system-account=true
# collect firewall information
# "netsh.exe"
system-security=true
# collect ACL permissions
# ".\tools-win\cfg\[non]recursive-acl.txt"
$ Sysinternals "accesschk[64].exe"
system-acl=true

# web
web-all=true
# collect Internet browsing history
# NirSoft "BrowsingHistoryView[64].exe"
web-history=true
# collect the Google Chrome cache
# NirSoft "ChromeCacheView.exe"
web-chrome=true
# collect the Internet Explorer cache
# NirSoft "IECacheView.exe"
web-ie=true
# collect the Mozilla Firefox cache
# NirSoft "MozillaCacheView.exe"
web-mozilla=true


# advanced

# check digital signatures and certificates of PEs
# ".\tools-win\cfg\[non]recursive.txt"
# Sysinternals "sigcheck[64].exe"
sigcheck=false
# compute density (entropy) values
# spot packed or encrypted binaries or payloads, or even compressed files
# ".\tools-win\cfg\[non]recursive.txt"
# "densityscout[64].exe"
density=false
# extract icons from PEs
# spot binaries compiled with default icons from unusual languages like Python
# ".\tools-win\cfg\[non]recursive.txt"
# NirSoft "iconsext.exe"
iconsext=false
# run YARA scans
# ".\tools-win\yara\rules\*.yar", ".\tools-win\cfg\[non]recursive.txt"
# "yara(32|64).exe"
yara=false
