=============================================================================================
# 老男孩教育：                                                                            	#
# www.oldboyedu.com                                                                       	#
# 邮件：miaokm@oldboyedu.com(189 1048 1057)                                               	#
# 地址：北京市昌平区顺沙路8号院汇德商厦4F                                                 	#
# 资源老师   手机电话：		    QQ号码        资源老师： 手机电话：	QQ号码    	    #
# 飞雪		 135 5261 2571		80042789      小雨		 186 0046 2391      390320151     	#
# 歪歪		 189 1171 8229		70271111      丹丹		 158 1059 0206      41117397      	#
# 冰冰		 150 1078 5220		41117483												  	#
=============================================================================================

老男孩深圳脱产01-day23-操作系统磁盘管理
==================================	

00. 课程介绍部分
    1. 磁盘层次说明
	2. 按照磁盘层次详细了解磁盘知识
      
01. 课程知识回顾
    1) 系统用户权限
	   a 利用sudo方式进行普通用户提权
	   b 利用linux系统特殊权限位配置普通用户权限
	     setuid: (4XXX)将文件数据的属主权限,赋予其他所有的用户
		 setuid权限一般赋予二进制的命令文件或者一些可执行的脚本文件 
		 
		 补充: 脚本如何执行:
		 01. 借助解释器命令执行脚本
		     sh /server/scripts/xxx.sh
			 python /server/scripts/xxx.py
		 02. 直接还行脚本(当成命令执行)
             将脚本文件赋予执行权限
             /server/scripts/xxx.sh			 
		     /server/scripts/ --> PATH
			 xxx
		 setgid: (2XXX)将文件数据的属组权限,赋予其他所有的用户
		 粘滞位: 常见一个共享目录 共享数据只能互相查看  不能互相随意修改
    
	 2) 系统中重要数据信息如何加锁
	    chattr  +i  文件信息
		chattr  -i  文件信息
		lsattr  文件信息

	 3) 定时任务实现方式
	    01. 系统自带定时任务 (4个特殊的目录)
		02. 用户自己设定定时任务 (一个命令 crontab 三个文件 日志文件 配置文件 黑名单文件)
		
	 4) 定时任务配置方法:
	    crontab -e 
		* * * * *     命令信息
		定时时间信息
    
	    时间的表示方法:
		直接用数值表示: 00 02 * * *
		可以用符号表示: * */n n,m n-m
		注意: 星期信息不要和日期信息同时设置
	   
	 5) 定时任务编写的注意事项:
	    1) 定时任务编写时需要加注释信息
		2) 文件的路径尽量采用绝对路径
		3) 命令信息最好也要用绝对路径 
		4) 编写定时任务尽量在后面加上重定向黑洞 &>/dev/null
	       定时任务中有输出到屏幕上的信息:
		   如果开启邮件服务 postfix: 输出的信息 >> /var/spool/mail/root                  block空间不足
		   如果关闭邮件服务 postfix: 输出的信息 >> /var/spool/postfix/maildrop/小文件    inode空间不足
	    5) 尽可能让命令不要产生正确或错误的输出信息
		   tar zcvf  --> tar zcf 
        6) 多个定时任务命令,最好使用脚本实现
		7) 定时任务中无法识别任务中的一些特殊符号  
           解决方式一: 利用转义符号		
		   * * * * *  /bin/date "+\%F \%T" >/tmp/time.txt
		   解决方式二: 利用脚本编写任务
		   vim /oldboy/date.sh
		   /bin/date "+%F %T"
		   
		   * * * * *  /bin/sh /oldboy/date.sh &>/dev/null
		   
02. linux系统磁盘概念
    磁盘的结构体系
	01. 磁盘的物理结构 (外部结构 内部结构) 工作原理(先切换磁头 让磁头镜像运动)  OK
	02. 磁盘阵列说明   (raid0 raid1 raid5 raid10 raid01)
	    磁盘阵列如何配置 
        配置LVM  L 逻辑  v 卷组  M 管理  逻辑卷管理 --> 实现可以随意调整磁盘分区大小 
	03. 磁盘分区概念
        给容量较小的磁盘进行分区: 小于2T  fdisk
        给容量较大的磁盘进行分区: 大于2T  parted	
    04. 磁盘格式化操作(创建文件系统)
    05. 磁盘维护管理知识(如何使用磁盘 挂载使用)	
	   
03. 磁盘层次结构详细说明--物理结构
    磁盘的外部结构: 看的见摸得到的结构
    组成部分
	a 磁盘主轴  决定磁盘转速（rpm-round per minute）
	  家用磁盘转速  7200 rpm 5400 rpm
	  企业磁盘转速  15k  rpm  10k rpm
	b 磁盘盘片  用于存储数据
	c 磁盘磁头  用于读取数据
	d 磁盘接口  用于连接主板 用于连接阵列卡

    磁盘的内部结构: 看不见的结构信息
	组成部分: 
	a 磁盘（Disk）
    b 磁头（Head）
	  作用说明：用来写入和读取数据的
	  特点说明：盘面数量等于磁头数量
	  工作原理：采用径向运动读写数据
    c 磁道（Track）
	  作用说明：用来存储用户数据
	  特点说明：由多个同心圆组成
	  
	  存储计数：最外面同心圆为0磁道
	  工作原理：磁盘默认按照磁道寻找数据
		        重点原理：磁头径向运动为机械运动（寻道）  性能小于固态硬盘(芯片)
		        原理特点：磁头机械运动较慢
    d 扇区（Sector）
	  作用说明：用来存储用户数据
	  特点说明：磁盘存储最小单位
	  存储计数：默认磁盘扇区从1扇区开始，扇区大小为512字节
	  系统存储最小单位是block
    e 柱面（Cylinder） 
	  作用说明：用来存储用户数据
	  特点说明：不同盘面上相同的磁道组成（圆柱体）
	  工作原理：磁盘默认按照柱面进行读写
		        重点原理：磁头之间的切换为电子切换
		        原理特点：磁头电子切换较快
    f 单元块（Units） 
	  作用说明：用来存储用户数据
	  特点说明：表示单个柱面大小
	   
04. 磁盘层次结构详细说明--磁盘阵列raid
    阵列有什么用?
    1) 提高磁盘存储效率
    2) 提高磁盘存储安全
    3) 提高磁盘存储容量	
	阵列的配置方法:
    raid 0   存储数据效率高  存储安全性低
    raid 1	 存储数据效率低  存储安全性高
	
	raid 5   存储数据效率较高  存储安全性较高
	说明: 至少有3块磁盘  raid5阵列中只能最多坏一块磁盘  损耗一块磁盘的容量
	300G 300G 300G --> raid5 --> 600G
	LVM 实现分区可以弹性缩融 和 扩容
	
05. 磁盘层次结构详细说明--磁盘分区方法
    预备知识: 
	a 系统启动引导记录--
	  MBR引导记录  用于引导磁盘空间小于2T
	  GPT引导记录  用于引导磁盘空间大于2T
	  
    b 分区方式
	  情况一:
	  可以划分4个主分区  /dev/sda  /dev/sda1 .. sda4   mount /dev/sda1  /mnt
	  情况二: 
	  可以划分3个主分区    /dev/sda  /dev/sda1 .. sda3 
	  可以划分1个扩展分区  扩展分区无法直接使用
      需要在扩展分区基础上划分逻辑分区:  /dev/sda5 /dev/sda6 ...	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	
	
	   
       